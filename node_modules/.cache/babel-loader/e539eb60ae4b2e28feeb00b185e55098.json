{"ast":null,"code":"import config from '../config/config';\nimport APICallingService from './APICallingService';\n\nconst callToLanguageListService = url => {\n  return APICallingService.sendRequestForGet(url, '', res => {});\n};\n\nconst callToLanguageService = (url, payload) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToLoginService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToRegisterService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToVisiterPostService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToForgotpasswordService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToChangepasswordService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callToQuetionSaveService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nconst callTogetLocations = url => {\n  return APICallingService.sendRequestForGet(url, '', res => {});\n};\n\nconst callToSaveFeedBackService = (payload, url) => {\n  return APICallingService.sendRequestForPostWithAuth(url, payload, '', res => {});\n};\n\nasync function fetchLanguageListService(CB) {\n  let url = config.url.languageListUrl;\n  const response = await callToLanguageListService(url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function fetchLanguageService(payload, CB) {\n  let url = config.url.languageUrl;\n  const response = await callToLanguageService(url, payload);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function fetchLoginService(payload, CB) {\n  let url = config.url.loginUrl;\n  const response = await callToLoginService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function fetchRegisterService(payload, CB) {\n  let url = config.url.signupUrl;\n  const response = await callToRegisterService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function fetchVisitorService(payload, CB) {\n  let url = config.url.visitorpost;\n  const response = await callToVisiterPostService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function fetchforgotService(payload, CB) {\n  let url = config.url.resetPasswordUrl;\n  const response = await callToForgotpasswordService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function changePasswordService(payload, token, CB) {\n  let url = config.url.changePasswordUrl;\n  const response = await callToChangepasswordService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function saveQuesionsService(payload, CB) {\n  let url = config.url.savequetionUrl;\n  const response = await callToQuetionSaveService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function getLocations(urlAppend, CB) {\n  let url = config.url.getLocations + urlAppend;\n  const response = await callTogetLocations(url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nasync function sendFeedback(payload, CB) {\n  let url = config.url.sendFeedback;\n  const response = await callToSaveFeedBackService(payload, url);\n\n  if (response) {\n    CB(response);\n  }\n}\n\nexport { fetchLanguageListService, fetchLanguageService, fetchLoginService, saveQuesionsService, getLocations, changePasswordService, sendFeedback, fetchRegisterService, fetchforgotService };","map":{"version":3,"names":["config","APICallingService","callToLanguageListService","url","sendRequestForGet","res","callToLanguageService","payload","sendRequestForPostWithAuth","callToLoginService","callToRegisterService","callToVisiterPostService","callToForgotpasswordService","callToChangepasswordService","callToQuetionSaveService","callTogetLocations","callToSaveFeedBackService","fetchLanguageListService","CB","languageListUrl","response","fetchLanguageService","languageUrl","fetchLoginService","loginUrl","fetchRegisterService","signupUrl","fetchVisitorService","visitorpost","fetchforgotService","resetPasswordUrl","changePasswordService","token","changePasswordUrl","saveQuesionsService","savequetionUrl","getLocations","urlAppend","sendFeedback"],"sources":["D:/xamp/htdocs/Undrtool/Archive/src/services/webServices.js"],"sourcesContent":["import config from '../config/config';\nimport APICallingService from './APICallingService';\n\nconst callToLanguageListService = (url) => {\n    return APICallingService.sendRequestForGet(url, '', (res) => {\n    });\n}\n\nconst callToLanguageService = (url, payload) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToLoginService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToRegisterService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToVisiterPostService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToForgotpasswordService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToChangepasswordService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callToQuetionSaveService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nconst callTogetLocations = (url) => {\n    return APICallingService.sendRequestForGet(url, '', (res) => {\n    });\n}\n\nconst callToSaveFeedBackService = (payload, url) => {\n    return APICallingService.sendRequestForPostWithAuth(url, payload, '', (res) => {\n    });\n}\n\nasync function fetchLanguageListService(CB) {\n    let url = config.url.languageListUrl;\n    const response = await callToLanguageListService(url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function fetchLanguageService(payload, CB) {\n    let url = config.url.languageUrl;\n    const response = await callToLanguageService(url, payload);\n    if (response) {\n        CB(response);\n    }\n}\n\nasync function fetchLoginService(payload, CB) {\n    let url = config.url.loginUrl;\n    const response = await callToLoginService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function fetchRegisterService(payload, CB) {\n    let url = config.url.signupUrl;\n    const response = await callToRegisterService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\nasync function fetchVisitorService(payload, CB) {\n    let url = config.url.visitorpost;\n    const response = await callToVisiterPostService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\nasync function fetchforgotService(payload, CB) {\n    let url = config.url.resetPasswordUrl;\n    const response = await callToForgotpasswordService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function changePasswordService(payload, token, CB) {\n    let url = config.url.changePasswordUrl;\n    const response = await callToChangepasswordService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function saveQuesionsService(payload, CB) {\n    let url = config.url.savequetionUrl;\n    const response = await callToQuetionSaveService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function getLocations(urlAppend, CB) {\n    let url = config.url.getLocations + urlAppend;\n    const response = await callTogetLocations(url);\n    if (response) {\n        CB(response)\n    }\n}\n\nasync function sendFeedback(payload, CB) {\n    let url = config.url.sendFeedback;\n    const response = await callToSaveFeedBackService(payload, url);\n    if (response) {\n        CB(response)\n    }\n}\n\nexport {\n    fetchLanguageListService,\n    fetchLanguageService,\n    fetchLoginService,\n    saveQuesionsService,\n    getLocations,\n    changePasswordService,\n    sendFeedback,\n    fetchRegisterService,\n    fetchforgotService\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}